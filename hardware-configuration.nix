# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/377bb05d-554c-47a9-a0f6-3f0f031ab228";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/49BC-6054";
      fsType = "vfat";
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/08ac8672-b5c0-4069-9871-fdef86d7250a"; }
    ];

  fileSystems."/mnt/titan-linux-disk" =
    { device = "/dev/disk/by-uuid/3772ace1-c7f0-4924-b65a-d81b046f32c0";
      fsType = "ext4";
    };

  fileSystems."/media/robert/LINUX_DATA" =
    { device = "/dev/disk/by-uuid/b5e50622-9d25-464a-98c9-346cc0e319f6";
      fsType = "ext4";
    };


  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
